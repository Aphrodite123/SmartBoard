apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        applicationId "com.aphrodite.smartboard"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk { abiFilters "armeabi-v7a", "arm64-v8a" }

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }

    signingConfigs {
        debug {
            storeFile file(storefile)
            storePassword storepassword
            keyAlias keyalias
            keyPassword keypassword
        }

        release {
            storeFile file(storefile)
            storePassword storepassword
            keyAlias keyalias
            keyPassword keypassword
        }
    }

    buildTypes {
        /*正式环境*/
        debug {
            minifyEnabled false
            shrinkResources false
            matchingFallbacks = ['release', 'debug']
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            //是否输出日志
            buildConfigField 'boolean', 'IS_DEBUG', 'true'
            //服务器地址
            buildConfigField 'String', 'SERVER_URL', '"https://www.dbmeinv.com/"'
        }
        release {
            minifyEnabled true
            shrinkResources false
            matchingFallbacks = ['release', 'debug']
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            //是否输出日志
            buildConfigField 'boolean', 'IS_DEBUG', 'false'
            //服务器地址
            buildConfigField 'String', 'SERVER_URL', '"https://www.dbmeinv.com/"'
            debuggable false
        }
    }

    //自定义APK名称,多渠道打包
    applicationVariants.all { variant ->
        variant.outputs.all { output ->  // each 改为 all
            def fileName = defaultConfig.applicationId + "_v" + defaultConfig.versionName + ".apk"
            def outFile = output.outputFile
            if (outFile != null && outFile.name.endsWith('.apk')) {
                outputFileName = fileName  //  output.outputFile 改为 outputFileName
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    ndkVersion '21.3.6528147'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.aphrodite.framework:framework-base:1.0.5'
    /**
     * Log
     */
    implementation 'com.orhanobut:logger:2.2.0'
    /**
     * 注解框架
     */
    implementation 'com.jakewharton:butterknife:10.2.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'com.jakewharton.rxbinding:rxbinding:1.0.1'
    /**
     * Stetho调试 Realm
     */
    implementation 'com.facebook.stetho:stetho:1.5.1'
//    implementation 'com.uphyca:stetho_realm:2.3.0'
    /**
     * EventBus
     */
    implementation 'org.greenrobot:eventbus:3.2.0'
    /**
     * 网络请求
     */
    implementation files('libs/ksoap2-android-assembly-3.0.0-jar-with-dependencies.jar')
    /**
     * WeChat
     */
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'

    //开发SDK
    implementation 'com.apeman.sdk:smart_device:1.0.16-alpha'
}